
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Text to speech
tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

zwave:
  usb_path: "/dev/serial/by-id/usb-0658_0200-if00"
  config_path: "/home/pi/open-zwave/config"

api: {}

# TODO: move to !rest.yaml include file
# Call service manually http://192.168.1.224:8123/developer-tools/service
# or by automation
#
#     automation:
#     - alias: 'Arrive at Work'
#       trigger:
#         platform: zone
#         entity_id: device_tracker.my_device
#         zone: zone.work
#         event: enter
#       action:
#         - service: rest_command.my_request
#           data:
#             status: "At Work"
#             emoji: ":calendar:"
#

rest_command:
  bedroom_roller_up:
    url: http://localhost:3000/blinds-i2c/bedroom_roller
    method: POST
    payload: '{"state": "up"}'
    content_type:  'application/json; charset=utf-8'
  bedroom_roller_down:
    url: http://localhost:3000/blinds-i2c/bedroom_roller
    method: POST
    payload: '{"state": "down"}'
    content_type:  'application/json; charset=utf-8'
  bedroom_blackout_up:
    url: http://localhost:3000/blinds-i2c/bedroom_blackout
    method: POST
    payload: '{"state": "up"}'
    content_type:  'application/json; charset=utf-8'
  bedroom_blackout_down:
    url: http://localhost:3000/blinds-i2c/bedroom_blackout
    method: POST
    payload: '{"state": "down"}'
    content_type:  'application/json; charset=utf-8'

  living_roller_down:
    url: http://localhost:3000/blinds-i2c/living_roller
    method: POST
    payload: '{"state": "down"}'
    content_type:  'application/json; charset=utf-8'
  living_roller_up:
    url: http://localhost:3000/blinds-i2c/living_roller
    method: POST
    payload: '{"state": "up"}'
    content_type:  'application/json; charset=utf-8'

  office_roller_up:
    url: http://localhost:3000/blinds-i2c/office_roller
    method: POST
    payload: '{"state": "up"}'
    content_type:  'application/json; charset=utf-8'
  office_roller_down:
    url: http://localhost:3000/blinds-i2c/office_roller
    method: POST
    payload: '{"state": "down"}'
    content_type:  'application/json; charset=utf-8'
  office_blackout_up:
    url: http://localhost:3000/blinds-i2c/office_blackout
    method: POST
    payload: '{"state": "up"}'
    content_type:  'application/json; charset=utf-8'
  office_blackout_down:
    url: http://localhost:3000/blinds-i2c/office_blackout
    method: POST
    payload: '{"state": "down"}'
    content_type:  'application/json; charset=utf-8'
